angular.module("angularValidator",[]),angular.module("angularValidator").directive("angularValidator",["$injector","$parse",function(a,b){return{restrict:"A",link:function(c,d,e,f){function g(b){return b&&"invalid-message"in b.attributes?a.get(b.attributes["invalid-message"].value):!1}function h(a){for(var b=g(a),c=0;c<a.length;c++)c in a&&i(a[c],b)}function i(a,b){"validate-on"in a.attributes&&"blur"===a.attributes["validate-on"].value&&angular.element(a).on("blur",function(){m(a,b),p(a)}),"validator-async"in a.attributes&&"function"!=typeof u[a.name].$asyncValidators.callback&&(u[a.name].$asyncValidators.callback=c.$eval(a.attributes["validator-async"].value));var d=c.$watch(function(){return a.value+a.required+u.submitted+l(a)+j(u[a.name])+k(u[a.name])},function(){if(u.submitted)m(a,b),p(a);else{var c="validate-on"in a.attributes&&"dirty"===a.attributes["validate-on"].value;c?(m(a,b),p(a)):u[a.name]&&u[a.name].$pristine&&(m(a,b),p(a))}});t.push(d)}function j(a){return a&&"$dirty"in a?a.$dirty:void 0}function k(a){return a&&"$valid"in a?a.$valid:void 0}function l(a){if("validator"in a.attributes){var b=c.$eval(a.attributes.validator.value);return u[a.name].$setValidity("angularValidator",b),b}}function m(a,b){var d=function(){return"<i class='fa fa-times'></i> Required"},e=function(){return"<i class='fa fa-times'></i> Invalid"};if(a.name in u){var f=u[a.name],g=o(a);g&&g.remove(),(f.$dirty||c[a.form.name]&&c[a.form.name].submitted)&&(f.$error.required?"required-message"in a.attributes?angular.element(a).after(n(a.attributes["required-message"].value)):angular.element(a).after(n(d)):f.$valid||("invalid-message"in a.attributes?angular.element(a).after(n(a.attributes["invalid-message"].value)):b?angular.element(a).after(n(b.message(f,a))):angular.element(a).after(n(e))))}}function n(a){return"<label class='control-label has-error validationMessage'>"+c.$eval(a)+"</label>"}function o(a){for(var b=angular.element(a).parent().children(),c=0;c<b.length;c++)if(angular.element(b[c]).hasClass("validationMessage"))return angular.element(b[c]);return!1}function p(a){if(a.name in u){var b=u[a.name];angular.element(a).removeClass("has-error"),angular.element(a.parentNode).removeClass("has-error"),(b.$dirty||u.submitted)&&b.$invalid&&(angular.element(a.parentNode).addClass("has-error"),angular.element(a).addClass("has-error"))}}var q=function(){return Math.floor(1e5*Math.random())},r=!1;if(angular.forEach(d.find("input,select,textarea"),function(a){a=$(a),a.attr("name")||(a.attr("name",q()),console.log("WARNING! AngularValidator -> One of your form elements(<input>, <textarea>, <select>) is missing a name. We got your back and added a name, but if you want a pretty one you should add it yourself."),r=!0)}),e.name||(d.attr("name","TGAV_FORM_"+q()),console.log("WARNING! AngularValidator -> Your form element(<form>) is missing a name. We got your back and added a name, but if you want a pretty one you should add it yourself."),r=!0),r)return void $compile(d)(c);var s=angular.element(d)[0],t=[],u=b(e.name)(c);u.submitted=!1,c.$watch(function(){return Object.keys(u).length},function(){angular.forEach(t,function(a){a()}),h(s)}),d.on("submit",function(a){a.preventDefault(),c.$apply(function(){u.submitted=!0}),u.$valid&&c.$apply(function(){c.$eval(e.angularValidatorSubmit)})}),u.reset=function(){angular.forEach(s,function(a){a.name&&(u[a.name].$setViewValue(""),u[a.name].$render())}),u.submitted=!1,u.$setPristine()},h(s)}}}]);